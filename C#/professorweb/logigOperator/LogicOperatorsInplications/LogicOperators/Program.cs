using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication1
{
    class Program
    {
        //Импликация — это двоичная операция, результатом которой является ложное значение только в том случае, 
        //если левый ее операнд имеет истинное значение, а правый — ложное. 
        //(Операция импликации отражает следующий принцип: истина не может подразумевать ложь.)

        static void Main(string[] args)
        {
            short d = 12, f = 0, i = 0;
            bool b = true;

            // В данном случае используется укороченный оператор
            // и операции сравнения выполнится в нормальном потоке
            if (f != 0 && (d % f) == 0)
                Console.WriteLine("{0} делится нацело на {1}", d, f);

            // В этом случае так же используется укороченный оператор
            // но при этом возникнет исключительная ситуация
            // т.к. первый оператор сравнения содержит деление на 0
            if ((d % f) == 0 && f != 0)
                Console.WriteLine("{0} делится нацело на {1}", d, f);

            // При использовании целостного оператора в любом
            // случае возникнет исключительная ситуация
            if (f != 0 & (d % f) == 0)
                Console.WriteLine("{0} делится нацело на {1}", d, f);

            //*** Практический пример использования обычных операторов ***//
            // При использовании обычного оператора, в данной конструкции 
            // i будет инкреминироваться
            if (b | (++i < 10))
                Console.WriteLine("i равно {0}", i);   // i = 1

            i = 0;
            // При использовании укороченного оператора
            // значение i останется прежним
            if (b || (++i < 10))
                Console.WriteLine("i равно {0}", i);  // i = 0

            Console.ReadLine();
        }

    }
}
